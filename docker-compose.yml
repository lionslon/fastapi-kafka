services:
  db-postgres:
    image: postgres:16-alpine
    volumes:
      - ./var/db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 8s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=data_db
    networks:
      - net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - net

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
    networks:
      - net

  fastapi_backend:
    build: .
    restart: on-failure
    command: bash -c "uvicorn src.main:app --host 0.0.0.0 --port 8000"
    volumes:
      - .:/src
    ports:
      - 8000:8000
    depends_on:
      db-postgres:
        condition: service_healthy
    env_file: .env
    environment:
      - PG_HOST=db-postgres
    networks:
      - net

networks:
  net: